#include <iostream>
#include <ctime>
#include <cstdlib>
using namespace std;

// Class created for binding all account details together
class Account {
    // Basic Variables declared
    int dogecoin, balance;
    int bitcoin;
    int deposit, withdraw;
    int total_equity = 100;
    int predict;
    int dogecoin_value;
    int bitcoin_value;
    int crypto_invest;
    int crypto_return;

    // Array to store transactions
    pair<string, int> transactions[100];
    int transaction_count = 0;

public:
    // Deposit Cash
    bool Deposit(int money) {
        deposit += money;
        balance += money;
        transactions[transaction_count++] = { "Deposit:", money };
        return true;
    }

    // Get account Details
    void Get_account_information() {
        cout << "Money Details:\n";
        cout << "Bank Balance: " << balance << endl;
        cout << "Dogecoin: " << dogecoin << endl;
        cout << "Bitcoin: " << bitcoin << endl;
    }

    // Withdraw Cash
    bool Withdraw(int money) {
        if (money > balance) {
            return false;
        }
        withdraw += money;
        balance -= money;
        transactions[transaction_count++] = { "Withdraw:", money };
        return true;
    }

    // Buy Crypto function
    bool buy_crypto() {
        int option;
        cout << "Want to purchase dogecoin press 1 else for bitcoin press 2\n";
        cin >> option;

        // Checking equity
        if (total_equity != 0) {
            srand(time(NULL));
            int luck = rand();

            // Checking if random number is divisible by 251
            if (luck % 251 == 0) {
                if (option == 1) {
                    dogecoin += 1;
                    balance -= dogecoin_value;
                    crypto_invest += (dogecoin) * dogecoin_value;
                } else {
                    bitcoin += 1;
                    balance -= bitcoin_value;
                    crypto_invest += bitcoin_value;
                }
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    // Selling crypto function
    bool sell_crypto() {
        int option;
        cout << "Want to sell dogecoin press 1 else for bitcoin press 2\n";
        cin >> option;

        if (option == 2) {
            if (bitcoin == 0)
                return false;
            crypto_return += bitcoin_value;
            balance += bitcoin_value;
            transactions[transaction_count++] = { "Bitcoin Sold:", bitcoin_value };
            bitcoin -= 1;
        } else {
            if (dogecoin == 0)
                return false;
            crypto_return += dogecoin_value;
            balance += dogecoin_value;
            transactions[transaction_count++] = { "Dogecoin Sold:", dogecoin_value };
            dogecoin -= 1;
        }

        return true;
    }

    // Checking All Transactions
    void History() {
        cout << "Displaying All transactions\n";
        for (int i = 0; i < transaction_count; ++i) {
            cout << transactions[i].first << " " << transactions[i].second << endl;
        }

        char temp;
        cout << "Do you want to clear all transactions (Y/N): ";
        cin >> temp;

        // Clearing All transactions
        if (temp == 'Y') {
            transaction_count = 0;
            cout << "Total transactions cleared.\n";
        } else {
            cout << "Total transaction count: " << transaction_count << endl;
        }
    }

    Account() {
        crypto_invest = 0;
        crypto_return = 0;
        total_equity = 100;
        balance = 50000;
        dogecoin = 0;
        bitcoin = 0;
        withdraw = 0;
        deposit = 0;
        dogecoin_value = 100;
        bitcoin_value = 500;
        transaction_count = 0;
    }
};

int main() {
    Account person;
    int amount, choice;
    bool check;

    while (1) {
        cout << "******************************************\n";
        cout << "Press 1 for Account Info\n";
        cout << "Press 2 to Deposit money\n";
        cout << "Press 3 to Withdraw money\n";
        cout << "Press 4 for transaction History\n";
        cout << "Press 5 to Buy Crypto\n";
        cout << "Press 6 to Sell Crypto\n";
        cout << "Press any other key to exit\n";
        cout << "******************************************\n";
        cin >> choice;

        switch (choice) {
        case 1:
            person.Get_account_information();
            break;

        case 2:
            cout << "Enter amount to deposit: ";
            cin >> amount;
            check = person.Deposit(amount);
            if (check)
                cout << "Successfully deposited money\n";
            else
                cout << "Failed to deposit\n";
            break;

        case 3:
            cout << "Enter amount to withdraw: ";
            cin >> amount;
            check = person.Withdraw(amount);
            if (check)
                cout << "Successfully withdrawn money\n";
            else
                cout << "Not enough balance\n";
            break;

        case 4:
            person.History();
            break;

        case 5:
            check = person.buy_crypto();
            if (check)
                cout << "Successful transaction\n";
            else
                cout << "Better luck next time\n";
            break;

        case 6:
            check = person.sell_crypto();
            if (check)
                cout << "Successful transaction\n";
            else
                cout << "Not enough cryptocoins\n";
            break;

        default:
            exit(0);
        }
    }
}
